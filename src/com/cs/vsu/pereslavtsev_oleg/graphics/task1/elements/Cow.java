package com.cs.vsu.pereslavtsev_oleg.graphics.task1.elements;

import java.awt.*;

public class Cow {
    private int startX;
    private int startY;
    private int[] x = {0, 1, -1, -11, -31, -31, -22, -23, -23, -34, -36, -38, -38, -43, -45, -44, -41, -40, -54, -69,
            -91, -109, -121, -126, -128, -128, -130, -132, -135, -138, -141, -143, -147, -150, -152, -151, -150, -149,
            -148, -145, -141, -138, -136, -133, -130, -128, -125, -104, -99, -97, -95, -91, -88, -85, -82, -76, -76,
            -75, -68, -67, -74, -80, -85, -88, -89, -83, -81, -63, -61, -56, -53, -52, -54, -55, -57, -62, -70, -75, -76,
            -76, -73, -72, -69, -67, -65, -65, -60, -52, -41, -34, -29, -21, -18, -15, -11, -8, -8, -5, 0, -7, -15, -19,
            -19, -17, -11, -3, 1, 4, 7, 11, 11, -10, -13, -15, -15, -13, -12, -12, -17, -18, -19, -18, -16, -12, -6, -2};

    private int[] y = {0, 6, 8, 9, 9, 11, 17, 21, 22, 14, 14, 12, 4, 3, 2, 1, -2, -6, -17, -26, -46, -60, -68, -72, -75,
            -77, -77, -75, -67, -57, -47, -44, -39, -34, -33, -38, -42, -45, -47, -51, -56, -64, -73, -79, -83, -85, -87,
            -114, -123, -131, -135, -136, -139, -145, -148, -150, -153, -152, -148, -147, -144, -138, -132, -125, -120,
            -120, -122, -137, -138, -138, -137, -135, -134, -133, -131, -129, -125, -119, -117, -114, -114, -113, -111,
            -107, -104, -99, -96, -89, -80, -80, -81, -89, -94, -98, -100, -101, -103, -101, -98, -93, -86, -78, -77, -77,
            -82, -91, -91, -94, -94, -91, -89, -75, -73, -68, -62, -60, -58, -49, -33, -27, -22, -19, -14, -10, -6, -2};

    public Cow(int startX, int startY) {
        this.startX = startX;
        this.startY = startY;
    }

    public void draw(Graphics2D g, int startX, int startY) {
        int[] pointsX = new int[x.length];
        int[] pointsY = new int[y.length];

        for (int i = 0; i < pointsX.length; i++) {
            pointsX[i] = startX + x[i];
            pointsY[i] = startY + y[i];
        }

        g.setPaint(new Color(0, 0, 0));
        g.fillPolygon(pointsX, pointsY, pointsX.length);
    }
}
